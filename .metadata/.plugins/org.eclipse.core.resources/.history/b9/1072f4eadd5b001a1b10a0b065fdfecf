package textLocaliserTest;

import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;
import java.util.HashMap;
import java.util.Map;

public interface TextLocaliser {
	
	public void loadDateFormats(Map<String, String> dateformats);
	public String localiesDate(String inputFormat, String outputFormat, String inputText);
	
	public void loadCurrencyFormats(Map<String, String> currencyformats);
	public String localiseCurrency(String inputFormat, double outputFormat, double inputText);
	
	public String localise(String inputFormat, String outputFormat, String inputtext);
	
}
class Method {
	
	public void loadDateFormat(Map<String, String> dateformats) {
		Map<String, String> dateformat = new HashMap<String, String>();
		dateformat.put("US", "mm/dd/yy");
		dateformat.put("UK", "dd/mm/yyyy");
		dateformat.put("DE", "yyyy-mm-dd");
				
	}

	public String localiseDate(String inputFormat, String outputFormat, String inputText) {
		
		boolean delimiter = false;
		String array[] = inputText.split("");
		int n = 0;
		String delimiterValue;
		
		while (delimiter == false) {
			
			boolean found = isDigit(array[n]);
			
			if(found == true) {
				delimiter = true;
				delimiterValue = array[n];
			}
			
			else {n++;}
		}
		
		String datefields[] = inputText.split(delimiterValue);
		
		String localisedDate = "EXAMPLE";
		return localisedDate;
	}
	
	public void loadCurrencyFormat(String currencyformat) {
		Map<String, String> currencyformats = new HashMap<String, String>();
		currencyformats.put("US", "en_US");	// find out what en_US, en_GB and de_DE
		currencyformats.put("UK", "en_GB");
		currencyformats.put("DE", "de_DE");
		
	}
	
	public String localiseCurrency() {
		String localisedCurrency = "String";
		return localisedCurrency;
	}
	
	public String localise() {
		String localisedValues = "String";
		return localisedValues;
	}
	
	
	
	public boolean isDigit(String character) {
		if (character.contains("0")) {
			return false;
		}
		else if (character.contains("1")) {
			return false;
		}
		else if (character.contains("2")) {
			return false;
		}
		else if (character.contains("3")) {
			return false;
		}
		else if (character.contains("4")) {
			return false;
		}
		else if (character.contains("5")) {
			return false;
		}
		else if (character.contains("6")) {
			return false;
		}
		else if (character.contains("7")) {
			return false;
		}
		else if (character.contains("8")) {
			return false;
		}
		else if (character.contains("9")) {
			return false;
		}
		else {
			return true;
		}
	}

}